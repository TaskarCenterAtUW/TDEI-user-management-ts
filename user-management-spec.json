{
    "openapi": "3.0.1",
    "externalDocs": {
        "description": "Specification - swagger.json",
        "url": "/api-docs/swagger.json"
    },
    "info": {
        "title": "TDEI Management API",
        "description": "Management API, describes admin & user activities in the TDEI system.",
        "contact": {
            "name": "TDEI Support",
            "url": "https://placeholder.transequity.cs.washington.edu/support",
            "email": "placeholder_support@transequity.cs.washington.edu"
        },
        "version": "v0.1"
    },
    "servers": [
        {
            "url": "https://tdei-usermanagement-ts-stage.azurewebsites.net",
            "description": "Staging"
        },
        {
            "url": "https://tdei-usermanagement-ts-dev.azurewebsites.net",
            "description": "Development"
        },
        {
            "url": "http://localhost:3004",
            "description": "Local Server"
        }
    ],
    "security": [
        {
            "AuthorizationToken": []
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication operations"
        },
        {
            "name": "User Management",
            "description": "User Management operations"
        },
        {
            "name": "Organization",
            "description": "Organization Management operations"
        },
        {
            "name": "GTFS Pathways Station",
            "description": "GTFS Pathways Station Management operations"
        },
        {
            "name": "GTFS Flex Service",
            "description": "GTFS Flex Service Management operations"
        }
    ],
    "paths": {
        "/api/v1/authenticate": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticates the user to the TDEI system",
                "description": "Authenticates the user to the TDEI system.  Returns access token. ",
                "operationId": "authenticate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "Successful response - Returns the access token object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/v1/user-profile": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Gets the user profile",
                "description": "Gets the user profile.",
                "operationId": "getUserProfile",
                "parameters": [
                    {
                        "name": "user_name",
                        "in": "query",
                        "description": "User name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the user profile details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh the user token",
                "description": "Refresh the user token",
                "operationId": "refresh-token",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "header",
                        "description": "Valid refresh token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "Successful response - Returns the access token object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Gets the TDEI roles",
                "description": "Gets the TDEI roles. ",
                "operationId": "roles",
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the list of roles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "RoleResponse",
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Roles"
                                            }
                                        }
                                    },
                                    "description": "Holds the response data"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/org-roles/{userId}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Gets the user associated organizations with roles.",
                "description": "Gets the user associated organizations with roles.",
                "operationId": "orgRoles",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id for which oraganizations to be fetched",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the user oraganizations with roles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrgRoles"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    },
                    "500": {
                        "description": "An server error occurred."
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Registers the user to the TDEI system",
                "description": "Registers the user to the TDEI system.  Returns new User object. ",
                "operationId": "registerUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "Successful response - Returns the newly created object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "RegisterResponse",
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "description": "Holds the response data"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                }
            }
        },
        "/api/v1/station": {
            "get": {
                "tags": [
                    "GTFS Pathways Station"
                ],
                "summary": "Gets the GTFS Pathways Station in the TDEI system ",
                "description": "Gets the GTFS Pathways Station in the TDEI system .",
                "operationId": "getStation",
                "parameters": [
                    {
                        "name": "tdei_station_id",
                        "in": "query",
                        "description": "Search by station Id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search by station name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_org_id",
                        "in": "query",
                        "description": "Owner organization id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "required": false,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Page number to fetch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to fetch.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of GTFS Pathways stations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "StationResponse",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Station"
                                    },
                                    "description": "List of stations"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                }
            },
            "post": {
                "tags": [
                    "GTFS Pathways Station"
                ],
                "summary": "Creates a GTFS Pathways station in the TDEI system",
                "description": "Creates a GTFS Pathways station in the TDEI system. Returns the id for the newly created pathways station.",
                "operationId": "createStation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Station"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "Successful response - Returns the id for the newly created pathways station.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/station/{orgId}": {
            "put": {
                "tags": [
                    "GTFS Pathways Station"
                ],
                "summary": "Updates a GTFS Pathways station in the TDEI system",
                "description": "Updates a GTFS Pathways station in the TDEI system.",
                "operationId": "updateStation",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "description": "Owner organization id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StationUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "GTFS Pathways station update successful."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/station/{orgId}/{stationId}/active/{status}": {
            "delete": {
                "tags": [
                    "GTFS Pathways Station"
                ],
                "summary": "Activates/Deactives the station.",
                "description": "Activates/Deactives the station.",
                "operationId": "setServiceStatus",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "description": "Owner organization id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stationId",
                        "in": "path",
                        "description": "Station Id of the station to be Activated/Deactivated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Boolean flag to Activate/Deactivate station.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    },
                    "500": {
                        "description": "An server error occurred."
                    }
                }
            }
        },
        "/api/v1/service": {
            "get": {
                "tags": [
                    "GTFS Flex Service"
                ],
                "summary": "Gets the GTFS Flex services in the TDEI system ",
                "description": "Gets the GTFS Flex services in the TDEI system .",
                "operationId": "getService",
                "parameters": [
                    {
                        "name": "tdei_service_id",
                        "in": "query",
                        "description": "Search by service Id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search by service name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_org_id",
                        "in": "query",
                        "description": "Owner organization id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "required": false,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Page number to fetch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to fetch.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of GTFS Flex service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ServiceResponse",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    },
                                    "description": "List of services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "GTFS Flex Service"
                ],
                "summary": "Creates a GTFS flex service in the TDEI system",
                "description": "Creates a GTFS flex service in the TDEI system.Returns the id for the newly created flex service.",
                "operationId": "createService",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Service"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "Successful response - Returns the id for the newly created flex service.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/service/{orgId}": {
            "put": {
                "tags": [
                    "GTFS Flex Service"
                ],
                "summary": "Updates a GTFS flex service in the TDEI system",
                "description": "Updates a GTFS flex service in the TDEI system.",
                "operationId": "updateService",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "description": "Owner organization id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid request."
                    },
                    "200": {
                        "description": "GTFS Flex service update successful."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/service/{orgId}/{serviceId}/active/{status}": {
            "delete": {
                "tags": [
                    "GTFS Flex Service"
                ],
                "summary": "Activates/Deactives the service.",
                "description": "Activates/Deactives the service.",
                "operationId": "deleteService",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "description": "Owner organization id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "Service Id of the service to be Activated/Deactivated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Boolean flag to Activate/Deactivate service.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    },
                    "500": {
                        "description": "An server error occurred."
                    }
                }
            }
        },
        "/api/v1/permission": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Associates a user with the organization and permissions in the TDEI system",
                "description": "Associates a user with the organization and permissions in the TDEI system. Returns the boolean flag true.",
                "operationId": "permission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the boolean flag true.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/permission/revoke": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Revokes the user permissions",
                "description": "Revokes the user permissions.",
                "operationId": "revokePermission",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the boolean flag true.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/organization": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Gets the organizations in the TDEI system ",
                "description": "Gets the organizations in the TDEI system .",
                "operationId": "getOrganization",
                "parameters": [
                    {
                        "name": "tdei_org_id",
                        "in": "query",
                        "description": "Search by organization Id.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search by organization name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "required": false,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Page number to fetch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to fetch.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of organizations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrganizationListResponse",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationList"
                                    },
                                    "description": "List of organizations"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Creates an organization in the TDEI system ",
                "description": "Creates an organization in the TDEI system.  Returns the id for the newly created organization.",
                "operationId": "createOrganization",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the id for the newly created organization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Organization"
                ],
                "summary": "Updates an organization in the TDEI system ",
                "description": "Updates an organization in the TDEI system.  Returns success if updated.",
                "operationId": "updateOrganization",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organization"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Organization update successful."
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/organization/{orgId}/users": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Gets the organization users in the TDEI system ",
                "description": "Gets the organization users in the TDEI system .",
                "operationId": "getOrganizationUsers",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "description": "Organization id for which users to be fetched",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search by organization name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Page number to fetch",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to fetch.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of organization users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "OrgUserResponse",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrgUser"
                                    },
                                    "description": "List of org users"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/organization/{orgId}/active/{status}": {
            "delete": {
                "tags": [
                    "Organization"
                ],
                "summary": "Activates/Deactives the organization.",
                "description": "Activates/Deactives the organization.",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "orgId",
                        "in": "path",
                        "description": "Organization Id of the organization to be Activated/Deactivated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Boolean flag to Activate/Deactivate organization.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful."
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "403": {
                        "description": "Unauthorized request"
                    },
                    "500": {
                        "description": "An server error occurred."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Token": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer"
                    },
                    "refresh_expires_in": {
                        "type": "integer"
                    },
                    "refresh_token": {
                        "type": "string"
                    }
                },
                "description": "Describes a user registration details."
            },
            "Login": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "description": "Describes a user registration details."
            },
            "OrgRoles": {
                "type": "object",
                "properties": {
                    "tdei_org_id": {
                        "type": "string"
                    },
                    "org_name": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "description": "List of roles associated with oraganization.",
                        "items": {
                            "type": "string",
                            "description": "Role associated with oraganization."
                        }
                    }
                },
                "description": "User associated organizations and roles."
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User Id name of the user."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the user."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user for communication."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone of the user for communication."
                    }
                },
                "description": "Describes a user registration details."
            },
            "Register": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "First name of the user."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the user for communication."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone of the user for communication."
                    },
                    "password": {
                        "type": "string",
                        "description": "Credential for the user login."
                    }
                },
                "description": "Describes a user registration details."
            },
            "Roles": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Role name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Role description."
                    }
                },
                "description": "Describes a user registration details."
            },
            "Station": {
                "required": [
                    "tdei_org_id",
                    "station_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_station_id": {
                        "type": "string",
                        "description": "Station Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "tdei_org_id": {
                        "type": "string",
                        "description": "Organization id of the station."
                    },
                    "station_name": {
                        "type": "string",
                        "description": "Name of the location. The ame should match the agency's rider-facing name for the location as printed on a timetable, published online, or represented on signage."
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/Polygon"
                    }
                },
                "description": "Describes a gtfs pathways station."
            },
            "StationUpdate": {
                "required": [
                    "tdei_station_id",
                    "station_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_station_id": {
                        "type": "string",
                        "description": "Station Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "station_name": {
                        "type": "string",
                        "description": "Name of the location. The ame should match the agency's rider-facing name for the location as printed on a timetable, published online, or represented on signage."
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/Polygon"
                    }
                },
                "description": "Describes a gtfs pathways station update model."
            },
            "Service": {
                "required": [
                    "tdei_org_id, ",
                    "service_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_service_id": {
                        "type": "string",
                        "description": "Service Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "tdei_org_id": {
                        "type": "string",
                        "description": "Organization id of the service."
                    },
                    "service_name": {
                        "type": "string",
                        "description": "Name of the service."
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/Polygon"
                    }
                },
                "description": "Describes a gtfs flex service."
            },
            "ServiceUpdate": {
                "required": [
                    "tdei_service_id",
                    "service_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_service_id": {
                        "type": "string",
                        "description": "Service Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "service_name": {
                        "type": "string",
                        "description": "Name of the service."
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/Polygon"
                    }
                },
                "description": "Describes a gtfs flex service update model."
            },
            "Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "description": "Holds the response data"
                    }
                },
                "description": "Holds the response data"
            },
            "PointOfContact": {
                "required": [
                    "poc_user_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_org_id": {
                        "type": "string",
                        "description": "Organization id to which point of contact to be associated."
                    },
                    "poc_user_name": {
                        "type": "string",
                        "description": "Point of contact username. Username represents user uniquely in the TDEI system. User should be already registered in the TDEI system using [POST] /user API."
                    }
                },
                "description": "Describes a point of contact details."
            },
            "RoleDetails": {
                "required": [
                    "tdei_org_id",
                    "roles",
                    "user_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_org_id": {
                        "type": "string",
                        "description": "Organization id to which user to be associated."
                    },
                    "user_name": {
                        "type": "string",
                        "description": "Username represents user uniquely in the TDEI system.  User should be already registered in the TDEI system using [POST] /user API."
                    },
                    "roles": {
                        "type": "array",
                        "description": "List of roles to be assigned to the user.",
                        "items": {
                            "type": "string",
                            "description": "List of roles to be assigned to the user."
                        }
                    }
                },
                "description": "Describes a user permissions."
            },
            "UserProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the user."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the user."
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the user."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone of the user."
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "Api key of the user."
                    }
                },
                "description": "Describes a gtfs pathways station."
            },
            "Organization": {
                "required": [
                    "email",
                    "org_name",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "tdei_org_id": {
                        "type": "string",
                        "description": "Organization Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "org_name": {
                        "type": "string",
                        "description": "Name of the organization."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone of the organization for communication."
                    },
                    "url": {
                        "type": "string",
                        "description": "Url of the transit organization."
                    },
                    "address": {
                        "type": "string",
                        "description": "Address of the transit organization."
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/Polygon"
                    }
                },
                "description": "Describes an Organization."
            },
            "OrganizationList": {
                "type": "object",
                "properties": {
                    "tdei_org_id": {
                        "type": "string",
                        "description": "Organization Id uniquely represented in the TDEI system. System generated.",
                        "default": "0"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the organization."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone of the organization for communication."
                    },
                    "url": {
                        "type": "string",
                        "description": "Url of the transit organization."
                    },
                    "address": {
                        "type": "string",
                        "description": "Address of the transit organization."
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/Polygon"
                    },
                    "poc": {
                        "type": "array",
                        "description": "Organization POC details",
                        "items": {
                            "$ref": "#/components/schemas/POC",
                            "description": "POC details"
                        }
                    }
                },
                "description": "Describes an Organization."
            },
            "POC": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "first_name",
                    "last_name",
                    "username",
                    "email"
                ]
            },
            "Polygon": {
                "title": "GeoJSON FeatureCollection",
                "type": "object",
                "required": [
                    "type",
                    "features"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "FeatureCollection"
                        ]
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "title": "GeoJSON Feature",
                            "type": "object",
                            "required": [
                                "type",
                                "properties",
                                "geometry"
                            ],
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "Feature"
                                    ]
                                },
                                "id": {
                                    "oneOf": [
                                        {
                                            "type": "number"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "properties": {
                                    "type": "object"
                                },
                                "geometry": {
                                    "title": "GeoJSON Polygon",
                                    "type": "object",
                                    "required": [
                                        "type",
                                        "coordinates"
                                    ],
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "Polygon"
                                            ]
                                        },
                                        "coordinates": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "minItems": 4,
                                                "items": {
                                                    "type": "array",
                                                    "minItems": 2,
                                                    "maxItems": 2,
                                                    "items": {
                                                        "type": "number",
                                                        "format": "double"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OrgUser": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "user_id",
                    "first_name",
                    "last_name",
                    "email",
                    "username",
                    "phone",
                    "roles"
                ]
            }
        },
        "securitySchemes": {
            "AuthorizationToken": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}